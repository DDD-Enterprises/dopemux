# MetaMCP Broker Configuration
#
# Core configuration for the MetaMCP role-aware tool brokering system.
# This file defines the broker's operational parameters, server connections,
# and integration settings.

version: "1.0"
metadata:
  description: "MetaMCP broker configuration for role-aware tool orchestration"
  created: "2025-01-09"
  last_updated: "2025-01-09"

# Broker core settings
broker:
  # Basic operational parameters
  name: "dopemux-metamcp-broker"
  version: "1.0.0"
  host: "localhost"
  port: 8090

  # Performance settings
  max_concurrent_tools: 10
  tool_timeout_seconds: 30
  role_switch_timeout_seconds: 5
  health_check_interval: 60

  # Connection pools
  connection_pools:
    stdio_pool_size: 5
    http_pool_size: 10
    websocket_pool_size: 8

  # Retry and resilience
  retry_policy:
    max_retries: 3
    backoff_multiplier: 2.0
    initial_delay_ms: 100
    max_delay_ms: 5000

  # Circuit breaker for tool failures
  circuit_breaker:
    failure_threshold: 5
    recovery_timeout: 30
    half_open_max_calls: 3

# MCP server definitions and connection details - LIVE DOCKER CONNECTIONS
servers:
  # Core development tools - LIVE CONNECTIONS
  serena:
    transport: "http"
    url: "http://localhost:3006"
    startup_timeout: 10
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 30

  claude-context:
    transport: "http"
    url: "http://localhost:3007"
    startup_timeout: 15
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 45

  # Research and information gathering - LIVE CONNECTIONS
  exa:
    transport: "http"
    url: "http://localhost:3008"
    startup_timeout: 8
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 45

  # AI and reasoning tools - LIVE CONNECTIONS
  zen:
    transport: "http"
    url: "http://localhost:3003"
    startup_timeout: 20
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 60

  sequential-thinking:
    transport: "stdio"
    command: ["docker", "exec", "-i", "mcp-mas-sequential-thinking", "mcp-server-mas-sequential-thinking"]
    startup_timeout: 15
    health_check:
      method: "ping"
      interval: 45

  # Task and project management - LIVE CONNECTIONS
  task-master-ai:
    transport: "http"
    url: "http://localhost:3005"
    startup_timeout: 12
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 30

  conport:
    transport: "http"
    url: "http://localhost:3004"
    startup_timeout: 10
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 30

  # Additional live servers available
  morphllm-fast-apply:
    transport: "http"
    url: "http://localhost:3011"
    startup_timeout: 10
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 30

  desktop-commander:
    transport: "http"
    url: "http://localhost:3012"
    startup_timeout: 10
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 30

  docrag:
    transport: "http"
    url: "http://localhost:3009"
    startup_timeout: 10
    health_check:
      method: "health"
      endpoint: "/health"
      interval: 30

# Role-based server mounting rules - UPDATED FOR LIVE SERVERS
role_mappings:
  developer:
    primary_servers: ["serena", "claude-context", "morphllm-fast-apply"]
    escalation_servers: ["sequential-thinking", "zen", "desktop-commander"]
    pre_warm: true  # Keep connections ready

  researcher:
    primary_servers: ["exa", "claude-context"]
    escalation_servers: ["sequential-thinking", "zen"]
    pre_warm: false  # Load on demand

  planner:
    primary_servers: ["task-master-ai", "conport-memory"]
    escalation_servers: ["zen", "exa"]
    pre_warm: true

  reviewer:
    primary_servers: ["claude-context", "conport-memory"]
    escalation_servers: ["sequential-thinking", "zen"]
    pre_warm: true

  ops:
    primary_servers: ["desktop-commander", "conport-memory"]
    escalation_servers: ["sequential-thinking", "zen"]
    pre_warm: false

  architect:
    primary_servers: ["zen", "sequential-thinking"]
    escalation_servers: ["exa", "claude-context", "serena"]
    pre_warm: true

  debugger:
    primary_servers: ["zen", "claude-context", "sequential-thinking"]
    escalation_servers: ["serena", "morphllm-fast-apply", "desktop-commander"]
    pre_warm: true

# Integration settings
integrations:
  # Letta memory system integration
  letta:
    enabled: true
    endpoint: "http://letta-server:8000"
    api_key_env: "LETTA_API_KEY"
    memory_tiers:
      core:
        max_size: 8000  # tokens
        retention: "session"
      recall:
        max_size: 32000  # tokens
        retention: "24h"
      archival:
        max_size: 1000000  # tokens
        retention: "30d"

  # Claude-flow orchestration
  claude_flow:
    enabled: true
    endpoint: "http://claude-flow:3000"
    bridge_command: ["node", "/opt/claude-flow/bridge.js"]
    process_timeout: 300

  # ConPort session management
  conport:
    enabled: true
    auto_checkpoint_interval: 1500  # 25 minutes
    context_preservation: true

  # Dopemux UI integration
  tmux_ui:
    enabled: true
    status_bar_updates: true
    popup_notifications: true
    max_status_signals: 7

# Monitoring and observability
monitoring:
  # Metrics collection
  metrics:
    enabled: true
    export_interval: 60  # seconds
    retention_days: 7

    # Prometheus metrics export
    prometheus:
      enabled: true
      port: 9090
      path: "/metrics"

    # Custom metrics
    custom_metrics:
      - name: "tool_mount_latency"
        type: "histogram"
        help: "Time to mount tools by role"

      - name: "token_budget_usage"
        type: "gauge"
        help: "Current token usage by session"

      - name: "role_transitions"
        type: "counter"
        help: "Number of role transitions by type"

      - name: "optimization_savings"
        type: "counter"
        help: "Tokens saved by pre-tool hooks"

  # Health monitoring
  health:
    enabled: true
    endpoint: "/health"
    detailed_endpoint: "/health/detailed"

    checks:
      - name: "tool_servers"
        type: "server_connectivity"
        timeout: 5

      - name: "memory_usage"
        type: "system_resource"
        threshold: 80  # percent

      - name: "token_budgets"
        type: "custom"
        check_function: "check_budget_health"

  # Logging configuration
  logging:
    level: "INFO"
    format: "json"

    outputs:
      - type: "file"
        path: "/var/log/metamcp/broker.log"
        rotation: "daily"
        retention: 7

      - type: "console"
        enabled: true

      - type: "syslog"
        enabled: false
        facility: "local0"

# Security settings
security:
  # API authentication
  authentication:
    enabled: true
    method: "bearer_token"
    token_env: "METAMCP_AUTH_TOKEN"

  # Tool access control
  access_control:
    enabled: true
    policy_file: "/config/mcp/policy.yaml"
    audit_logging: true

  # Rate limiting
  rate_limiting:
    enabled: true
    global_limit: 1000  # requests per hour
    per_role_limits:
      developer: 120
      researcher: 80
      planner: 60
      reviewer: 90
      ops: 140
      architect: 70
      debugger: 110

  # Audit configuration
  audit:
    enabled: true
    log_all_calls: true
    sensitive_data_masking: true
    retention_days: 90

# Feature flags and experimental features
features:
  # Enable/disable major features
  role_based_mounting: true
  budget_aware_hooks: true
  letta_integration: true
  predictive_loading: false  # Experimental
  auto_policy_tuning: false  # Experimental

  # ADHD accommodations
  adhd_optimizations:
    progressive_disclosure: true
    gentle_notifications: true
    context_preservation: true
    break_reminders: true

  # Development and debugging
  debug_mode: false
  verbose_logging: false
  tool_call_tracing: false

# Error handling and fallbacks
error_handling:
  # Tool failure responses
  tool_failures:
    max_consecutive_failures: 3
    failure_cooldown: 300  # seconds
    fallback_behavior: "degrade_gracefully"

  # Role transition failures
  role_transitions:
    timeout_behavior: "preserve_current"
    fallback_profile: "safe_mode"

  # Budget enforcement failures
  budget_enforcement:
    enforcement_failure_behavior: "allow_with_warning"
    hard_cap_behavior: "deny_and_suggest"

# Performance tuning
performance:
  # Caching
  caching:
    tool_definitions:
      enabled: true
      ttl: 3600  # 1 hour

    role_policies:
      enabled: true
      ttl: 1800  # 30 minutes

    budget_calculations:
      enabled: true
      ttl: 300   # 5 minutes

  # Connection management
  connections:
    keep_alive: true
    idle_timeout: 300
    max_idle_connections: 20

  # Resource limits
  resources:
    max_memory_mb: 2048
    max_cpu_percent: 80
    max_open_files: 1024
