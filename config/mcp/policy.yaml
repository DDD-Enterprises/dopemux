# MetaMCP Role-aware Tool Brokering Policy Configuration
#
# This file defines role-based tool access policies, token budgets, and escalation rules
# for the MetaMCP orchestration system.

version: "1.0"
metadata:
  description: "Role-based MCP tool access policies for ADHD-optimized development"
  created: "2025-01-09"
  last_updated: "2025-01-09"

# Core role definitions with tool mappings and budgets
profiles:
  developer:
    description: "Code implementation and debugging"
    default_tools:
      - serena
      - claude-context
      - cli
    token_budget: 10000
    escalation_triggers:
      test_failure:
        additional_tools: [sequential-thinking]
        max_duration: 1800  # 30 minutes
        auto_trigger: true
      complex_arch:
        additional_tools: [zen, sequential-thinking]
        max_duration: 3600  # 1 hour
        auto_trigger: false
        approval_required: true
      ui_testing:
        additional_tools: [playwright]
        max_duration: 900   # 15 minutes
        auto_trigger: false

  researcher:
    description: "Information gathering and analysis"
    default_tools:
      - context7
      - exa
    token_budget: 15000
    escalation_triggers:
      deep_analysis:
        additional_tools: [sequential-thinking]
        max_duration: 2700  # 45 minutes
        auto_trigger: false
      architecture_research:
        additional_tools: [zen]
        max_duration: 1800  # 30 minutes
        auto_trigger: false

  planner:
    description: "Project planning and task management"
    default_tools:
      - task-master-ai
      - conport
    token_budget: 8000
    escalation_triggers:
      architecture_planning:
        additional_tools: [zen, sequential-thinking]
        max_duration: 2700  # 45 minutes
        auto_trigger: false
      stakeholder_analysis:
        additional_tools: [context7]
        max_duration: 1800  # 30 minutes
        auto_trigger: false

  reviewer:
    description: "Code review and quality assurance"
    default_tools:
      - claude-context
      - conport
    token_budget: 12000
    escalation_triggers:
      complex_review:
        additional_tools: [sequential-thinking]
        max_duration: 1800  # 30 minutes
        auto_trigger: false
      security_review:
        additional_tools: [zen]
        max_duration: 2700  # 45 minutes
        auto_trigger: false
        approval_required: true

  ops:
    description: "Operations and deployment"
    default_tools:
      - cli
      - conport
    token_budget: 8000
    escalation_triggers:
      ui_automation:
        additional_tools: [playwright]
        max_duration: 1800  # 30 minutes
        auto_trigger: false
      incident_response:
        additional_tools: [sequential-thinking, zen]
        max_duration: 7200  # 2 hours
        auto_trigger: true
        priority: high

  architect:
    description: "System design and architecture"
    default_tools:
      - zen
      - sequential-thinking
    token_budget: 15000
    escalation_triggers:
      research_integration:
        additional_tools: [context7, exa]
        max_duration: 3600  # 1 hour
        auto_trigger: false
      implementation_guidance:
        additional_tools: [claude-context, serena]
        max_duration: 1800  # 30 minutes
        auto_trigger: false

  debugger:
    description: "Problem solving and troubleshooting"
    default_tools:
      - zen
      - claude-context
      - sequential-thinking
    token_budget: 15000
    escalation_triggers:
      system_testing:
        additional_tools: [playwright]
        max_duration: 1800  # 30 minutes
        auto_trigger: false
      deep_investigation:
        additional_tools: [serena, cli]
        max_duration: 3600  # 1 hour
        auto_trigger: false

# Global policy rules and constraints
rules:
  budgets:
    # Default token allocation per session
    default_tokens: 60000
    # Hard cap to prevent runaway consumption
    hard_cap: 120000
    # Warning threshold (80% of budget)
    warning_threshold: 48000
    # Emergency reserve for critical operations
    emergency_reserve: 10000

  # Query optimization and trimming rules
  trims:
    # Limit search results to prevent overwhelming responses
    claude-context:
      max_results: 3
      max_file_size: 50000  # characters
      preferred_file_types: [".py", ".js", ".ts", ".md"]

    # Constrain task list queries
    task-master-ai:
      list_tasks:
        limit: 50
        include_completed: false
        max_description_length: 200
      get_task:
        include_subtasks: true
        max_subtask_depth: 3

    # Optimize search queries
    exa:
      min_query_length: 12
      max_results: 10
      include_text: false  # Get summaries instead of full text
      exclude_domains: ["pinterest.com", "instagram.com"]

    # Limit context7 documentation retrieval
    context7:
      max_docs: 5
      prefer_official: true
      max_doc_length: 10000  # characters

    # Constrain sequential thinking depth
    sequential-thinking:
      max_thinking_depth: 5
      focus_mode: true  # Reduce verbose reasoning
      time_limit: 300   # 5 minutes max thinking time

    # Zen tool optimizations
    zen:
      consensus:
        max_models: 3
        fast_mode: true
      debug:
        max_trace_depth: 10
        include_stack_trace: false
      codereview:
        focus_areas: ["security", "performance", "maintainability"]
        max_suggestions: 8

  # Security and access control
  security:
    # Require approval for potentially dangerous operations
    approval_required:
      - zen.consensus  # Multi-model coordination
      - playwright.*   # UI automation
      - cli.system.*   # System-level commands

    # Audit all tool access
    audit_logging: true

    # Rate limiting per role
    rate_limits:
      developer: 100  # requests per hour
      researcher: 80
      planner: 60
      reviewer: 90
      ops: 120
      architect: 70
      debugger: 110

  # ADHD-specific accommodations
  adhd_optimizations:
    # Progressive disclosure settings
    progressive_disclosure:
      enabled: true
      max_simultaneous_tools: 5
      status_bar_signals: 7

    # Context preservation
    context_preservation:
      auto_checkpoint_interval: 1500  # 25 minutes (Pomodoro)
      max_context_age: 86400  # 24 hours
      preserve_across_roles: true

    # Gentle notifications
    notifications:
      budget_warnings:
        enabled: true
        threshold: 0.8  # 80% of budget
        style: "gentle"

      tool_suggestions:
        enabled: true
        proactive: false  # Only suggest when asked
        max_suggestions: 3

    # Break reminders
    break_reminders:
      enabled: true
      interval: 1500  # 25 minutes
      style: "gentle"
      include_progress: true

# Emergency and fallback configurations
emergency:
  # Break-glass access for critical situations
  break_glass:
    enabled: true
    approval_timeout: 300  # 5 minutes to approve
    max_duration: 3600     # 1 hour maximum
    audit_required: true
    available_tools: "all"

  # Fallback when broker fails
  fallback_profiles:
    safe_mode:
      description: "Minimal toolset for basic operations"
      tools: [cli, conport]
      token_budget: 5000

    full_access:
      description: "All tools available (pre-MetaMCP behavior)"
      tools: "all"
      token_budget: 100000
      use_case: "broker_failure"

# Monitoring and observability settings
monitoring:
  metrics:
    enabled: true
    collection_interval: 60  # seconds
    retention_days: 30

    tracked_metrics:
      - token_usage_per_role
      - tool_mounting_latency
      - role_transition_frequency
      - budget_adherence
      - user_satisfaction_scores
      - escalation_frequency

  alerts:
    budget_exceeded:
      enabled: true
      threshold: 0.95  # 95% of hard cap
      notification_channels: ["log", "ui"]

    tool_mount_failures:
      enabled: true
      threshold: 3  # failures in 5 minutes
      notification_channels: ["log", "admin"]

    performance_degradation:
      enabled: true
      latency_threshold: 1000  # ms
      notification_channels: ["log", "monitoring"]

# Version compatibility and migration
compatibility:
  min_version: "1.0.0"
  deprecation_warnings: true
  migration_support: true