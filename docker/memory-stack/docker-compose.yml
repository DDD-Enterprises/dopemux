version: '3.8'

services:
  # Milvus vector database for semantic search
  milvus-etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - milvus_etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - milvus_minio_data:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.0
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: milvus-etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "milvus-etcd"
      - "milvus-minio"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3

  # PostgreSQL for graph truth storage
  postgres:
    container_name: dopemux-postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: dopemux_memory
      POSTGRES_USER: dopemux
      POSTGRES_PASSWORD: dopemux_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dopemux -d dopemux_memory"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zep for conversational memory (temporarily disabled)
  # zep:
  #   container_name: dopemux-zep
  #   image: ghcr.io/getzep/zep:latest
  #   environment:
  #     ZEP_STORE_TYPE: postgres
  #     ZEP_STORE_POSTGRES_DSN: postgres://dopemux:dopemux_dev_password@postgres:5432/dopemux_memory?sslmode=disable
  #     ZEP_AUTH_REQUIRED: "false"
  #     ZEP_LOG_LEVEL: info
  #     ZEP_OPENAI_API_KEY: ${OPENAI_API_KEY}
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - zep_data:/app/data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # ConPort MCP server with memory extensions
  conport-memory:
    container_name: dopemux-conport-memory
    build:
      context: ../../
      dockerfile: docker/memory-stack/Dockerfile.conport
    environment:
      DATABASE_URL: postgresql://dopemux:dopemux_dev_password@postgres:5432/dopemux_memory
      MILVUS_HOST: milvus-standalone
      MILVUS_PORT: 19530
      ZEP_API_URL: http://zep:8000
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      VOYAGE_API_KEY: ${VOYAGE_API_KEY}
      LOG_LEVEL: info
      MCP_HTTP_MODE: "true"
      PORT: 3004
    ports:
      - "3010:3004"
    depends_on:
      postgres:
        condition: service_healthy
      milvus-standalone:
        condition: service_healthy
    volumes:
      - ../../:/workspace
    working_dir: /workspace
    command: python -m conport.memory_server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  milvus_etcd_data:
  milvus_minio_data:
  milvus_data:
  postgres_data:
  zep_data:

networks:
  default:
    name: dopemux-memory-network