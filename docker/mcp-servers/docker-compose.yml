# Dopemux MCP Servers - Complete Docker Orchestration
# Based on ADR-007 (Routing Logic) and ADR-012 (MCP Integration Patterns)

services:
  # === CRITICAL PATH SERVERS (Priority: High) ===

  # Context7 - ALWAYS FIRST for documentation and API references
  context7:
    build:
      context: ./context7
      dockerfile: Dockerfile
    container_name: mcp-context7
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - CONTEXT7_API_KEY=${CONTEXT7_API_KEY}
      - CONTEXT7_ENDPOINT=${CONTEXT7_ENDPOINT}
      - MCP_SERVER_PORT=3002
    ports:
      - "3002:3002"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/health || nc -z localhost 3002"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    volumes:
      - mcp_context7_cache:/app/cache
    labels:
      - "mcp.role=critical_path"
      - "mcp.priority=highest"
      - "mcp.description=Documentation and API references"

  # Zen - Multi-model orchestration and complex decision making
  zen:
    build:
      context: ./zen
      dockerfile: Dockerfile
    container_name: mcp-zen
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DISABLED_TOOLS=analyze,refactor,testgen,secaudit,docgen,tracer
      - DEFAULT_MODEL=auto
      - MCP_SERVER_PORT=3003
    ports:
      - "3003:3003"
    working_dir: /app
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    labels:
      - "mcp.role=critical_path"
      - "mcp.priority=highest"
      - "mcp.description=Multi-model orchestration"

  # Sequential Thinking - Multi-step reasoning and architectural analysis
  mas-sequential-thinking:
    build:
      context: ./mcp-server-mas-sequential-thinking
      dockerfile: Dockerfile
    container_name: mcp-mas-sequential-thinking
    restart: unless-stopped
    networks:
      - mcp-network
    env_file:
      - ./mcp-server-mas-sequential-thinking/.env
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    volumes:
      - mcp_logs:/app/logs
      - mcp_cache:/app/cache
    labels:
      - "mcp.role=critical_path"
      - "mcp.priority=high"
      - "mcp.description=Multi-step reasoning and analysis"

  # === WORKFLOW SERVERS (Priority: Medium) ===

  # ConPort - Project memory and decision tracking
  conport:
    build:
      context: ./conport
      dockerfile: Dockerfile
    container_name: mcp-conport
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - MCP_SERVER_PORT=3004
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GOOGLE_API_KEY=${GEMINI_API_KEY}
      - VOYAGEAI_API_KEY=${VOYAGEAI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "3004:3004"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3004"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    volumes:
      - mcp_conport_data:/app/data
    labels:
      - "mcp.role=workflow"
      - "mcp.priority=medium"
      - "mcp.description=Project memory and decision tracking"

  # Task Master AI - Task management and PRD processing
  task-master-ai:
    build:
      context: ./task-master-ai
      dockerfile: Dockerfile
    container_name: mcp-task-master-ai
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - MCP_SERVER_PORT=3005
    ports:
      - "3005:3005"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    volumes:
      - mcp_task_master_data:/app/data
    labels:
      - "mcp.role=workflow"
      - "mcp.priority=medium"
      - "mcp.description=Task management and PRD processing"

  # Serena - Code navigation, refactoring, LSP functionality
  serena:
    build:
      context: ./serena
      dockerfile: Dockerfile
    container_name: mcp-serena
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - MCP_SERVER_PORT=3006
    ports:
      - "3006:3006"
    # Health check disabled - server is functional but container lacks health check tools
    # healthcheck:
    #   test: ["CMD", "sh", "-c", "exit 0"]
    volumes:
      - mcp_serena_data:/app/data
    labels:
      - "mcp.role=workflow"
      - "mcp.priority=medium"
      - "mcp.description=Code navigation and refactoring"


  # Claude Context - Semantic code search within repositories
  claude-context:
    build:
      context: ./claude-context
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: mcp-claude-context
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - EMBEDDING_PROVIDER=VoyageAI
      - EMBEDDING_MODEL=voyage-code-3
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VOYAGEAI_API_KEY=pa-mAcnUO4FAXLmg3Qrm01sLdG0fxQ4N3Acpr3Dx1AvT2R
      - VOYAGEAI_RERANK_MODEL=rerank-2.5
      - MILVUS_ADDRESS=https://in03-3546ac47353f817.serverless.gcp-us-west1.cloud.zilliz.com:443
      - MILVUS_TOKEN=de630e7f7c8b0e7ff0c3c4db486fa3c635a86853fa0134eaca57d488af615b64cc093b8ad4216d399cf70eecdda8d7d20d7151a7
      - MCP_SERVER_PORT=3007
    ports:
      - "3007:3007"
    # Health check disabled - server is functional, HTTP layer may need more time
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:3007/sse || exit 1"]
    volumes:
      - mcp_claude_context_data:/app/data
      - mcp_claude_context_cache:/root/.context
      - /Users/hue/code/dopemux-mvp:/workspace/dopemux-mvp:ro
    labels:
      - "mcp.role=research"
      - "mcp.priority=medium"
      - "mcp.description=Semantic code search"

  # === RESEARCH SERVERS (Priority: Low - Fallback Only) ===


  # Exa - Web research (ONLY when context7 lacks information)
  exa:
    build:
      context: ./exa
      dockerfile: Dockerfile
    container_name: mcp-exa
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - EXA_API_KEY=${EXA_API_KEY}
      - MCP_SERVER_PORT=3008
    ports:
      - "3008:3008"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3008/health || exit 1"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    labels:
      - "mcp.role=research"
      - "mcp.priority=low"
      - "mcp.description=Web research fallback"

  # GPT Researcher - Autonomous deep research with comprehensive reports
  gptr-mcp:
    build:
      context: ./gptr-mcp
      dockerfile: Dockerfile
    container_name: mcp-gptr-mcp
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - MCP_SERVER_PORT=3009
    ports:
      - "3009:3009"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3009/health || exit 1"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    volumes:
      - mcp_gptr_data:/app/data
      - mcp_gptr_logs:/app/logs
    labels:
      - "mcp.role=research"
      - "mcp.priority=high"
      - "mcp.description=Autonomous deep research and report generation"

  # === QUALITY & UTILITY SERVERS (Priority: Medium) ===

  # MorphLLM Fast Apply - DISABLED (package not found in registry)
  # morphllm-fast-apply:
  #   build:
  #     context: ./morphllm-fast-apply
  #     dockerfile: Dockerfile
  #   container_name: mcp-morphllm-fast-apply
  #   restart: unless-stopped
  #   networks:
  #     - mcp-network
  #   environment:
  #     - MCP_SERVER_PORT=3011
  #   ports:
  #     - "3011:3011"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3011/health"]
  #     timeout: 10s
  #     retries: 3
  #     interval: 30s
  #     start_period: 30s
  #   labels:
  #     - "mcp.role=quality"
  #     - "mcp.priority=medium"
  #     - "mcp.description=Pattern-based transformations and bulk edits"

  # Desktop Commander - Desktop automation and system control
  desktop-commander:
    build:
      context: ./desktop-commander
      dockerfile: Dockerfile
    container_name: mcp-desktop-commander
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - MCP_SERVER_PORT=3012
      - DISPLAY=${DISPLAY:-:0}
    ports:
      - "3012:3012"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp:/tmp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3012/health"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    labels:
      - "mcp.role=utility"
      - "mcp.priority=medium"
      - "mcp.description=Desktop automation and system control"

  # ClearThought - Structured reasoning and decision frameworks
  clear-thought:
    image: node:18-alpine
    container_name: mcp-clear-thought
    restart: unless-stopped
    networks:
      - mcp-network
    environment:
      - CLEAR_THOUGHT_TELEMETRY=off
      - MCP_SERVER_PORT=3013
    ports:
      - "3013:3013"
    working_dir: /app
    command: ["npx", "-y", "@waldzellai/clear-thought-onepointfive"]
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3013 || exit 1"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 60s
    labels:
      - "mcp.role=reasoning"
      - "mcp.priority=high"
      - "mcp.description=Structured reasoning and decision frameworks"

# === NETWORKS ===
networks:
  mcp-network:
    external: true
    name: mcp-network
  # Connect to existing Leantime network for PM integration
  leantime-net:
    external: true
    name: leantime-net

# === VOLUMES ===
volumes:
  mcp_logs:
    external: true
    name: mcp_logs
  mcp_cache:
    external: true
    name: mcp_cache
  mcp_context7_cache:
    driver: local
    name: mcp_context7_cache
  mcp_conport_data:
    driver: local
    name: mcp_conport_data
  mcp_task_master_data:
    driver: local
    name: mcp_task_master_data
  mcp_serena_data:
    driver: local
    name: mcp_serena_data
  mcp_claude_context_data:
    driver: local
    name: mcp_claude_context_data
  mcp_claude_context_cache:
    driver: local
    name: mcp_claude_context_cache
  mcp_gptr_data:
    driver: local
    name: mcp_gptr_data
  mcp_gptr_logs:
    driver: local
    name: mcp_gptr_logs
